#!/usr/bin/wish
package require Itcl
package require xBlt 3
package require SigLoad 1.0

#load ./sig_load.so


itcl::class sig_viewer {
    # widgets: root, plot, top menu, scrollbar:
    variable rwid
    variable pwid
    variable mwid
    variable swid

  constructor {} {
    set rwid {}
    if {$rwid ne {}} {frame $rwid}
    set pwid $rwid.p
    set mwid $rwid.f
    set swid $rwid.sb
    frame $mwid

    button $mwid.exit -command "$this finish" -text Exit
    pack $mwid.exit -side left -padx 2

    pack $mwid -side top -fill x -padx 4 -pady 4

    scrollbar $swid -orient horizontal
    pack $swid -side bottom -fill x

    ## set window size
    set swidth [winfo screenwidth .]
    set pwidth [expr {$swidth - 80}]
    if {$pwidth > 1520} {set pwidth 1520}

    blt::graph $pwid -width $pwidth -height 600 -leftmargin 60
    pack $pwid -side top -expand yes -fill both
    $pwid legend configure -activebackground white

    # configure standard xBLT things:
    xblt::plotmenu $pwid -showbutton 1 -buttonlabel Menu\
       -buttonfont {Helvetica 12} -menuoncanvas 0
    xblt::legmenu  $pwid -showseparator 0

    xblt::hielems $pwid
    xblt::crosshairs $pwid -show 1
    xblt::measure $pwid
    xblt::readout $pwid -variable v_readout -active 1
    xblt::zoomstack $pwid -axes x -recttype x
    xblt::elemop $pwid
    xblt::scroll $pwid $swid;
    xblt::xcomments $pwid -on_add "$this on_add" -on_del "$this on_del"

    bind . <Alt-Key-q>     "$this finish"
    bind . <Control-Key-q> "$this finish"
    wm protocol . WM_DELETE_WINDOW "$this finish"
  }

  destructor {
  }

  method finish {} { exit }

  method on_add {t0 txt} {
    puts "add: $t0 -- $txt"
  }

  method on_del {t0 txt} {
    puts "del: $t0 -- $txt"
  }

  method add_signal {file} {
    set ncols [sig_load vec $file]

    ## configure plot
    for {set i 0} {$i < $ncols} {incr i} {
      set defcolors {red green blue cyan magenta yellow}
      set n "c$i"
      set t "channel $i"
      set c [lindex $defcolors [expr {$i%[llength $defcolors]} ] ]
      set f %e
      set l 0

      # create vertical axis and the element, bind them
      $pwid axis create $n -title $t -titlecolor black -logscale $l
      $pwid element create $n -mapy $n -symbol "" -color $c
      $pwid element bind $n <Enter> [list $pwid yaxis use [list $n]]
      # set data vectors for the element
      $pwid element configure $n -xdata vec_x -ydata vec_y$i
    }
  }

  method add_text {file} {
    set ncols [txt_load vec $file]

    ## configure plot
    for {set i 0} {$i < $ncols} {incr i} {
      set defcolors {red green blue cyan magenta yellow}
      set n "c$i"
      set t "channel $i"
      set c [lindex $defcolors [expr {$i%[llength $defcolors]} ] ]
      set f %e
      set l 0

      # create vertical axis and the element, bind them
      $pwid axis create $n -title $t -titlecolor black -logscale $l
      $pwid element create $n -mapy $n -color $c
      $pwid element bind $n <Enter> [list $pwid yaxis use [list $n]]
      # set data vectors for the element
      $pwid element configure $n -xdata vec_x -ydata vec_y$i
    }
  }

}


#### load file into BLT vectors
if {$::argc != 1} { error "Usage: sig_view <file>" }
set file [lindex $::argv 0]

sig_viewer viewer
viewer add_signal $file

